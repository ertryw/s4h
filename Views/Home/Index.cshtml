@{
    ViewData["Title"] = "S4H";
    Layout = "_DevExtremeLayout";
}

<div class="left-content">
    @(Html.DevExtreme().TreeView()
        .ID("simple-treeview")
        .DataSource(d => d.Mvc().LoadAction("GetItems"))   
        .DataStructure(TreeViewDataStructure.Plain)
        .KeyExpr("ID")
        .DisplayExpr("Text")
        .ExpandedExpr("Expanded")
        )
</div>


<div class="right-content">
    @(
            Html.DevExtreme().DataGrid<s4h.Models.RomRoom>()
                .ID("gridContainer")
                .ShowBorders(true)
                .DataSource(d => d.Mvc().LoadAction("GetRooms"))
                .DataSourceOptions(o => o.Paginate(true).PageSize(20))
                .RemoteOperations(true)
                .OnEditingStart("editingStart")
                .OnSaved("OnSaved")
                .Editing(e => e.Mode(GridEditMode.Popup)
                    .AllowUpdating(true)
                    .AllowAdding(true)
                    .AllowDeleting(true)
                    .Popup(p => p
                        .Title("Informacje")
                        .ShowTitle(true)
                        .Width(1000)
                        .Height(525)
                        .OnShowing("formPopup")
                        .ContentTemplate("<div> Wczytywanie ... </div>")
                        .OnHiding("OnClosing")
                )
            )
            .Columns(columns =>
            {
                columns.AddFor(m => m.Id).Width(50);
                columns.AddFor(m => m.Loc.Name).Caption("Lokalizacja").Width(100);
                columns.AddFor(m => m.Ros.Name).Caption("Standard");
                columns.AddFor(m => m.Name).Caption("Nazwa");
                columns.AddFor(m => m.Description).Caption("Opis");
            })
        )
</div>


<script>

  
    var editedId = 0;
    var standards = null;
    var locations = null;
    var edited = null;

    $.getJSON("https://localhost:7244/home/getlocationsandstandards", { id: editedId }, function (result) {
        standards = result[0];
        locations = result[1];
    });

    function OnSaved() {
        $.ajax({
            url: 'https://localhost:7244/home/setroom',
            type: 'PUT',
            data: edited,
            success: function (result) {
                // Do something with the result
            }
        });
    }

    function OnClosing() {
        $(".dx-popup-content").empty();
    }

    function editingStart(e) {
        editedId = e.data.Id;
    }

    function formPopup(component) {
        console.log("popup")

        $.getJSON("https://localhost:7244/home/getroom", {id:editedId}, function (result) {

            let room = result;
            edited = room

            $(".dx-popup-content").dxForm({
                formData: room,
                colCount: 3,
                onFieldDataChanged: function (e) {
                    edited[e.dataField] = e.value;
                },
                items: ["Id", 
                {
                    dataField: "Rosid", editorType: "dxSelectBox", editorOptions: {
                        dataSource: standards,
                        valueExpr: "Id",
                        displayExpr: "Name",
                    }
                },
                {
                    dataField: "Locid", editorType: "dxSelectBox", editorOptions: {
                    dataSource: locations,
                    valueExpr: "Id",
                    displayExpr: "Name",
                    }
                }]
            });
        });
    }




</script>